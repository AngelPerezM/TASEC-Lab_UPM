// Body file for function TC74Sensors
// Generated by TASTE on 2021-05-17 23:45:12
// You can edit this file, it will not be overwritten
// Provided interfaces : readTempsCelsius
// Required interfaces : 
// User-defined properties for this function:
//   |_ Taste::Active_Interfaces = any
//   |_ Taste::coordinates = 120878 163087 146423 171985
// Timers              : 

#include "tc74sensors.h"
#include "tc74sensors_state.h"
#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
tc74sensors_state ctxt_tc74;


void tc74sensors_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
    std::cout << "[TC74Sensors] Startup" << std::endl;
}

void tc74sensors_PI_readTempsCelsius
      (asn1SccTC74s_All_Data *OUT_all_data)

{
    for (int i = 0; i < n_of_TC74s; ++i) {
        bool isValid = false;
        isValid = ctxt_tc74.tc74_sensors[i].isDataReady();
        OUT_all_data->arr[i].validity = isValid ? asn1Sccvalid : asn1Sccinvalid;
        
        if (isValid) {
            OUT_all_data->arr[i].temperature = ctxt_tc74.tc74_sensors[i].getTemperature() - 4.5;
        }
    }    
}


