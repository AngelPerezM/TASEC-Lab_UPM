--------------------------------------------------------
--! File generated by asn2aadl v2.2-r07c3620: DO NOT EDIT !
--------------------------------------------------------
--! MadeInFastMode:False:
--! InputASN1FileChecksum:775939cc69c07e347a318e69dff3d619:dataview/dataview-uniq.asn:
--------------------------------------------------------

package DataView

public

DATA ACC_MilliG_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 39; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ACC-MilliG-Data";
    TASTE::Position_In_File => [ line => 66 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END ACC_MilliG_Data;

DATA IMPLEMENTATION ACC_MilliG_Data.impl
END ACC_MilliG_Data.impl;

DATA ACC_MilliG_Data_Buffer_Max
END ACC_MilliG_Data_Buffer_Max;

DATA IMPLEMENTATION ACC_MilliG_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ACC_MilliG_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ACC_MilliG_Data_Buffer_Max.impl;

DATA ACC_MilliG_Data_Buffer
END ACC_MilliG_Data_Buffer;

DATA IMPLEMENTATION ACC_MilliG_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type ACC_MilliG_Data
SUBCOMPONENTS
    Buffer : data ACC_MilliG_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
END ACC_MilliG_Data_Buffer.impl;

DATA ACC_Raw_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ACC-Raw-Data";
    TASTE::Position_In_File => [ line => 61 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END ACC_Raw_Data;

DATA IMPLEMENTATION ACC_Raw_Data.impl
END ACC_Raw_Data.impl;

DATA ACC_Raw_Data_Buffer_Max
END ACC_Raw_Data_Buffer_Max;

DATA IMPLEMENTATION ACC_Raw_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ACC_Raw_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ACC_Raw_Data_Buffer_Max.impl;

DATA ACC_Raw_Data_Buffer
END ACC_Raw_Data_Buffer;

DATA IMPLEMENTATION ACC_Raw_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type ACC_Raw_Data
SUBCOMPONENTS
    Buffer : data ACC_Raw_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END ACC_Raw_Data_Buffer.impl;

DATA ATT_GUI
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 337; suggested aligned message buffer is...
    Source_Data_Size => 344 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ATT-GUI";
    TASTE::Position_In_File => [ line => 293 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END ATT_GUI;

DATA IMPLEMENTATION ATT_GUI.impl
END ATT_GUI.impl;

DATA ATT_GUI_Buffer_Max
END ATT_GUI_Buffer_Max;

DATA IMPLEMENTATION ATT_GUI_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ATT_GUI
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (344); -- Size of the buffer
    Source_Data_Size => 344 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ATT_GUI_Buffer_Max.impl;

DATA ATT_GUI_Buffer
END ATT_GUI_Buffer;

DATA IMPLEMENTATION ATT_GUI_Buffer.impl
    -- Buffer to hold a marshalled data of type ATT_GUI
SUBCOMPONENTS
    Buffer : data ATT_GUI_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 360 Bytes; -- Size of the buffer in bytes
END ATT_GUI_Buffer.impl;

DATA Content_Validity
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Content-Validity";
    TASTE::Position_In_File => [ line => 14 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Content_Validity;

DATA IMPLEMENTATION Content_Validity.impl
END Content_Validity.impl;

DATA Content_Validity_Buffer_Max
END Content_Validity_Buffer_Max;

DATA IMPLEMENTATION Content_Validity_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Content_Validity
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Content_Validity_Buffer_Max.impl;

DATA Content_Validity_Buffer
END Content_Validity_Buffer;

DATA IMPLEMENTATION Content_Validity_Buffer.impl
    -- Buffer to hold a marshalled data of type Content_Validity
SUBCOMPONENTS
    Buffer : data Content_Validity_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END Content_Validity_Buffer.impl;

DATA Date_Time
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 48; suggested aligned message buffer is...
    Source_Data_Size => 48 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Date-Time";
    TASTE::Position_In_File => [ line => 285 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Date_Time;

DATA IMPLEMENTATION Date_Time.impl
END Date_Time.impl;

DATA Date_Time_Buffer_Max
END Date_Time_Buffer_Max;

DATA IMPLEMENTATION Date_Time_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Date_Time
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (48); -- Size of the buffer
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Date_Time_Buffer_Max.impl;

DATA Date_Time_Buffer
END Date_Time_Buffer;

DATA IMPLEMENTATION Date_Time_Buffer.impl
    -- Buffer to hold a marshalled data of type Date_Time
SUBCOMPONENTS
    Buffer : data Date_Time_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 64 Bytes; -- Size of the buffer in bytes
END Date_Time_Buffer.impl;

DATA ENV_GUI
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 88; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "ENV-GUI";
    TASTE::Position_In_File => [ line => 313 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END ENV_GUI;

DATA IMPLEMENTATION ENV_GUI.impl
END ENV_GUI.impl;

DATA ENV_GUI_Buffer_Max
END ENV_GUI_Buffer_Max;

DATA IMPLEMENTATION ENV_GUI_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type ENV_GUI
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Source_Data_Size => 88 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END ENV_GUI_Buffer_Max.impl;

DATA ENV_GUI_Buffer
END ENV_GUI_Buffer;

DATA IMPLEMENTATION ENV_GUI_Buffer.impl
    -- Buffer to hold a marshalled data of type ENV_GUI
SUBCOMPONENTS
    Buffer : data ENV_GUI_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
END ENV_GUI_Buffer.impl;

DATA File_Name
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 81; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "File-Name";
    TASTE::Position_In_File => [ line => 12 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSTRING;
END File_Name;

DATA IMPLEMENTATION File_Name.impl
END File_Name.impl;

DATA File_Name_Buffer_Max
END File_Name_Buffer_Max;

DATA IMPLEMENTATION File_Name_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type File_Name
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Source_Data_Size => 88 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END File_Name_Buffer_Max.impl;

DATA File_Name_Buffer
END File_Name_Buffer;

DATA IMPLEMENTATION File_Name_Buffer.impl
    -- Buffer to hold a marshalled data of type File_Name
SUBCOMPONENTS
    Buffer : data File_Name_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
END File_Name_Buffer.impl;

DATA GPS_PVT
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 183; suggested aligned message buffer is...
    Source_Data_Size => 184 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "GPS-PVT";
    TASTE::Position_In_File => [ line => 27 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END GPS_PVT;

DATA IMPLEMENTATION GPS_PVT.impl
END GPS_PVT.impl;

DATA GPS_PVT_Buffer_Max
END GPS_PVT_Buffer_Max;

DATA IMPLEMENTATION GPS_PVT_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type GPS_PVT
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (184); -- Size of the buffer
    Source_Data_Size => 184 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END GPS_PVT_Buffer_Max.impl;

DATA GPS_PVT_Buffer
END GPS_PVT_Buffer;

DATA IMPLEMENTATION GPS_PVT_Buffer.impl
    -- Buffer to hold a marshalled data of type GPS_PVT
SUBCOMPONENTS
    Buffer : data GPS_PVT_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 200 Bytes; -- Size of the buffer in bytes
END GPS_PVT_Buffer.impl;

DATA GYRO_MilliDPS_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 39; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "GYRO-MilliDPS-Data";
    TASTE::Position_In_File => [ line => 77 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END GYRO_MilliDPS_Data;

DATA IMPLEMENTATION GYRO_MilliDPS_Data.impl
END GYRO_MilliDPS_Data.impl;

DATA GYRO_MilliDPS_Data_Buffer_Max
END GYRO_MilliDPS_Data_Buffer_Max;

DATA IMPLEMENTATION GYRO_MilliDPS_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type GYRO_MilliDPS_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END GYRO_MilliDPS_Data_Buffer_Max.impl;

DATA GYRO_MilliDPS_Data_Buffer
END GYRO_MilliDPS_Data_Buffer;

DATA IMPLEMENTATION GYRO_MilliDPS_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type GYRO_MilliDPS_Data
SUBCOMPONENTS
    Buffer : data GYRO_MilliDPS_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
END GYRO_MilliDPS_Data_Buffer.impl;

DATA GYRO_Raw_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "GYRO-Raw-Data";
    TASTE::Position_In_File => [ line => 72 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END GYRO_Raw_Data;

DATA IMPLEMENTATION GYRO_Raw_Data.impl
END GYRO_Raw_Data.impl;

DATA GYRO_Raw_Data_Buffer_Max
END GYRO_Raw_Data_Buffer_Max;

DATA IMPLEMENTATION GYRO_Raw_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type GYRO_Raw_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END GYRO_Raw_Data_Buffer_Max.impl;

DATA GYRO_Raw_Data_Buffer
END GYRO_Raw_Data_Buffer;

DATA IMPLEMENTATION GYRO_Raw_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type GYRO_Raw_Data
SUBCOMPONENTS
    Buffer : data GYRO_Raw_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END GYRO_Raw_Data_Buffer.impl;

DATA HTL_Config
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 87; suggested aligned message buffer is...
    Source_Data_Size => 88 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "HTL-Config";
    TASTE::Position_In_File => [ line => 169 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END HTL_Config;

DATA IMPLEMENTATION HTL_Config.impl
END HTL_Config.impl;

DATA HTL_Config_Buffer_Max
END HTL_Config_Buffer_Max;

DATA IMPLEMENTATION HTL_Config_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type HTL_Config
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (88); -- Size of the buffer
    Source_Data_Size => 88 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END HTL_Config_Buffer_Max.impl;

DATA HTL_Config_Buffer
END HTL_Config_Buffer;

DATA IMPLEMENTATION HTL_Config_Buffer.impl
    -- Buffer to hold a marshalled data of type HTL_Config
SUBCOMPONENTS
    Buffer : data HTL_Config_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
END HTL_Config_Buffer.impl;

DATA HTL_GUI
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 171; suggested aligned message buffer is...
    Source_Data_Size => 176 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "HTL-GUI";
    TASTE::Position_In_File => [ line => 262 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END HTL_GUI;

DATA IMPLEMENTATION HTL_GUI.impl
END HTL_GUI.impl;

DATA HTL_GUI_Buffer_Max
END HTL_GUI_Buffer_Max;

DATA IMPLEMENTATION HTL_GUI_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type HTL_GUI
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (176); -- Size of the buffer
    Source_Data_Size => 176 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END HTL_GUI_Buffer_Max.impl;

DATA HTL_GUI_Buffer
END HTL_GUI_Buffer;

DATA IMPLEMENTATION HTL_GUI_Buffer.impl
    -- Buffer to hold a marshalled data of type HTL_GUI
SUBCOMPONENTS
    Buffer : data HTL_GUI_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 192 Bytes; -- Size of the buffer in bytes
END HTL_GUI_Buffer.impl;

DATA HTL_State
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "HTL-State";
    TASTE::Position_In_File => [ line => 168 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END HTL_State;

DATA IMPLEMENTATION HTL_State.impl
END HTL_State.impl;

DATA HTL_State_Buffer_Max
END HTL_State_Buffer_Max;

DATA IMPLEMENTATION HTL_State_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type HTL_State
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END HTL_State_Buffer_Max.impl;

DATA HTL_State_Buffer
END HTL_State_Buffer;

DATA IMPLEMENTATION HTL_State_Buffer.impl
    -- Buffer to hold a marshalled data of type HTL_State
SUBCOMPONENTS
    Buffer : data HTL_State_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END HTL_State_Buffer.impl;

DATA Heater_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Heater-Data";
    TASTE::Position_In_File => [ line => 156 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END Heater_Data;

DATA IMPLEMENTATION Heater_Data.impl
END Heater_Data.impl;

DATA Heater_Data_Buffer_Max
END Heater_Data_Buffer_Max;

DATA IMPLEMENTATION Heater_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Heater_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Heater_Data_Buffer_Max.impl;

DATA Heater_Data_Buffer
END Heater_Data_Buffer;

DATA IMPLEMENTATION Heater_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type Heater_Data
SUBCOMPONENTS
    Buffer : data Heater_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END Heater_Data_Buffer.impl;

DATA Heater_On_Off
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "Heater-On-Off";
    TASTE::Position_In_File => [ line => 161 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END Heater_On_Off;

DATA IMPLEMENTATION Heater_On_Off.impl
END Heater_On_Off.impl;

DATA Heater_On_Off_Buffer_Max
END Heater_On_Off_Buffer_Max;

DATA IMPLEMENTATION Heater_On_Off_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type Heater_On_Off
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END Heater_On_Off_Buffer_Max.impl;

DATA Heater_On_Off_Buffer
END Heater_On_Off_Buffer;

DATA IMPLEMENTATION Heater_On_Off_Buffer.impl
    -- Buffer to hold a marshalled data of type Heater_On_Off
SUBCOMPONENTS
    Buffer : data Heater_On_Off_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END Heater_On_Off_Buffer.impl;

DATA I2C_ID
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "I2C-ID";
    TASTE::Position_In_File => [ line => 20 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END I2C_ID;

DATA IMPLEMENTATION I2C_ID.impl
END I2C_ID.impl;

DATA I2C_ID_Buffer_Max
END I2C_ID_Buffer_Max;

DATA IMPLEMENTATION I2C_ID_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type I2C_ID
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END I2C_ID_Buffer_Max.impl;

DATA I2C_ID_Buffer
END I2C_ID_Buffer;

DATA IMPLEMENTATION I2C_ID_Buffer.impl
    -- Buffer to hold a marshalled data of type I2C_ID
SUBCOMPONENTS
    Buffer : data I2C_ID_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END I2C_ID_Buffer.impl;

DATA IMU_All_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 176; suggested aligned message buffer is...
    Source_Data_Size => 176 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "IMU-All-Data";
    TASTE::Position_In_File => [ line => 83 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END IMU_All_Data;

DATA IMPLEMENTATION IMU_All_Data.impl
END IMU_All_Data.impl;

DATA IMU_All_Data_Buffer_Max
END IMU_All_Data_Buffer_Max;

DATA IMPLEMENTATION IMU_All_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type IMU_All_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (176); -- Size of the buffer
    Source_Data_Size => 176 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END IMU_All_Data_Buffer_Max.impl;

DATA IMU_All_Data_Buffer
END IMU_All_Data_Buffer;

DATA IMPLEMENTATION IMU_All_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type IMU_All_Data
SUBCOMPONENTS
    Buffer : data IMU_All_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 192 Bytes; -- Size of the buffer in bytes
END IMU_All_Data_Buffer.impl;

DATA MGT_MilliGauss_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 39; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MGT-MilliGauss-Data";
    TASTE::Position_In_File => [ line => 55 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END MGT_MilliGauss_Data;

DATA IMPLEMENTATION MGT_MilliGauss_Data.impl
END MGT_MilliGauss_Data.impl;

DATA MGT_MilliGauss_Data_Buffer_Max
END MGT_MilliGauss_Data_Buffer_Max;

DATA IMPLEMENTATION MGT_MilliGauss_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MGT_MilliGauss_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MGT_MilliGauss_Data_Buffer_Max.impl;

DATA MGT_MilliGauss_Data_Buffer
END MGT_MilliGauss_Data_Buffer;

DATA IMPLEMENTATION MGT_MilliGauss_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type MGT_MilliGauss_Data
SUBCOMPONENTS
    Buffer : data MGT_MilliGauss_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
END MGT_MilliGauss_Data_Buffer.impl;

DATA MGT_Raw_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "MGT-Raw-Data";
    TASTE::Position_In_File => [ line => 50 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END MGT_Raw_Data;

DATA IMPLEMENTATION MGT_Raw_Data.impl
END MGT_Raw_Data.impl;

DATA MGT_Raw_Data_Buffer_Max
END MGT_Raw_Data_Buffer_Max;

DATA IMPLEMENTATION MGT_Raw_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type MGT_Raw_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END MGT_Raw_Data_Buffer_Max.impl;

DATA MGT_Raw_Data_Buffer
END MGT_Raw_Data_Buffer;

DATA IMPLEMENTATION MGT_Raw_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type MGT_Raw_Data
SUBCOMPONENTS
    Buffer : data MGT_Raw_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END MGT_Raw_Data_Buffer.impl;

DATA OBSW_DP_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1154; suggested aligned message buffer is...
    Source_Data_Size => 1160 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBSW-DP-Data";
    TASTE::Position_In_File => [ line => 191 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END OBSW_DP_Data;

DATA IMPLEMENTATION OBSW_DP_Data.impl
END OBSW_DP_Data.impl;

DATA OBSW_DP_Data_Buffer_Max
END OBSW_DP_Data_Buffer_Max;

DATA IMPLEMENTATION OBSW_DP_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (1160); -- Size of the buffer
    Source_Data_Size => 1160 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END OBSW_DP_Data_Buffer_Max.impl;

DATA OBSW_DP_Data_Buffer
END OBSW_DP_Data_Buffer;

DATA IMPLEMENTATION OBSW_DP_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_Data
SUBCOMPONENTS
    Buffer : data OBSW_DP_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 1176 Bytes; -- Size of the buffer in bytes
END OBSW_DP_Data_Buffer.impl;

DATA OBSW_DP_Filter
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 4; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBSW-DP-Filter";
    TASTE::Position_In_File => [ line => 204 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aENUMERATED;
END OBSW_DP_Filter;

DATA IMPLEMENTATION OBSW_DP_Filter.impl
END OBSW_DP_Filter.impl;

DATA OBSW_DP_Filter_Buffer_Max
END OBSW_DP_Filter_Buffer_Max;

DATA IMPLEMENTATION OBSW_DP_Filter_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_Filter
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END OBSW_DP_Filter_Buffer_Max.impl;

DATA OBSW_DP_Filter_Buffer
END OBSW_DP_Filter_Buffer;

DATA IMPLEMENTATION OBSW_DP_Filter_Buffer.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_Filter
SUBCOMPONENTS
    Buffer : data OBSW_DP_Filter_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END OBSW_DP_Filter_Buffer.impl;

DATA OBSW_DP_SingleData
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 301; suggested aligned message buffer is...
    Source_Data_Size => 304 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "OBSW-DP-SingleData";
    TASTE::Position_In_File => [ line => 207 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END OBSW_DP_SingleData;

DATA IMPLEMENTATION OBSW_DP_SingleData.impl
END OBSW_DP_SingleData.impl;

DATA OBSW_DP_SingleData_Buffer_Max
END OBSW_DP_SingleData_Buffer_Max;

DATA IMPLEMENTATION OBSW_DP_SingleData_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_SingleData
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (304); -- Size of the buffer
    Source_Data_Size => 304 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END OBSW_DP_SingleData_Buffer_Max.impl;

DATA OBSW_DP_SingleData_Buffer
END OBSW_DP_SingleData_Buffer;

DATA IMPLEMENTATION OBSW_DP_SingleData_Buffer.impl
    -- Buffer to hold a marshalled data of type OBSW_DP_SingleData
SUBCOMPONENTS
    Buffer : data OBSW_DP_SingleData_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 320 Bytes; -- Size of the buffer in bytes
END OBSW_DP_SingleData_Buffer.impl;

DATA PS_All_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 136; suggested aligned message buffer is...
    Source_Data_Size => 136 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PS-All-Data";
    TASTE::Position_In_File => [ line => 144 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PS_All_Data;

DATA IMPLEMENTATION PS_All_Data.impl
END PS_All_Data.impl;

DATA PS_All_Data_Buffer_Max
END PS_All_Data_Buffer_Max;

DATA IMPLEMENTATION PS_All_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PS_All_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (136); -- Size of the buffer
    Source_Data_Size => 136 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PS_All_Data_Buffer_Max.impl;

DATA PS_All_Data_Buffer
END PS_All_Data_Buffer;

DATA IMPLEMENTATION PS_All_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PS_All_Data
SUBCOMPONENTS
    Buffer : data PS_All_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 152 Bytes; -- Size of the buffer in bytes
END PS_All_Data_Buffer.impl;

DATA PS_Calibration_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 96; suggested aligned message buffer is...
    Source_Data_Size => 96 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PS-Calibration-Data";
    TASTE::Position_In_File => [ line => 129 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PS_Calibration_Data;

DATA IMPLEMENTATION PS_Calibration_Data.impl
END PS_Calibration_Data.impl;

DATA PS_Calibration_Data_Buffer_Max
END PS_Calibration_Data_Buffer_Max;

DATA IMPLEMENTATION PS_Calibration_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PS_Calibration_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PS_Calibration_Data_Buffer_Max.impl;

DATA PS_Calibration_Data_Buffer
END PS_Calibration_Data_Buffer;

DATA IMPLEMENTATION PS_Calibration_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PS_Calibration_Data
SUBCOMPONENTS
    Buffer : data PS_Calibration_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 112 Bytes; -- Size of the buffer in bytes
END PS_Calibration_Data_Buffer.impl;

DATA PS_GUI
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 27; suggested aligned message buffer is...
    Source_Data_Size => 32 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PS-GUI";
    TASTE::Position_In_File => [ line => 308 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PS_GUI;

DATA IMPLEMENTATION PS_GUI.impl
END PS_GUI.impl;

DATA PS_GUI_Buffer_Max
END PS_GUI_Buffer_Max;

DATA IMPLEMENTATION PS_GUI_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PS_GUI
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (32); -- Size of the buffer
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PS_GUI_Buffer_Max.impl;

DATA PS_GUI_Buffer
END PS_GUI_Buffer;

DATA IMPLEMENTATION PS_GUI_Buffer.impl
    -- Buffer to hold a marshalled data of type PS_GUI
SUBCOMPONENTS
    Buffer : data PS_GUI_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 48 Bytes; -- Size of the buffer in bytes
END PS_GUI_Buffer.impl;

DATA PS_Processed_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PS-Processed-Data";
    TASTE::Position_In_File => [ line => 139 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PS_Processed_Data;

DATA IMPLEMENTATION PS_Processed_Data.impl
END PS_Processed_Data.impl;

DATA PS_Processed_Data_Buffer_Max
END PS_Processed_Data_Buffer_Max;

DATA IMPLEMENTATION PS_Processed_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PS_Processed_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PS_Processed_Data_Buffer_Max.impl;

DATA PS_Processed_Data_Buffer
END PS_Processed_Data_Buffer;

DATA IMPLEMENTATION PS_Processed_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PS_Processed_Data
SUBCOMPONENTS
    Buffer : data PS_Processed_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END PS_Processed_Data_Buffer.impl;

DATA PS_Raw_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PS-Raw-Data";
    TASTE::Position_In_File => [ line => 135 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PS_Raw_Data;

DATA IMPLEMENTATION PS_Raw_Data.impl
END PS_Raw_Data.impl;

DATA PS_Raw_Data_Buffer_Max
END PS_Raw_Data_Buffer_Max;

DATA IMPLEMENTATION PS_Raw_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PS_Raw_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PS_Raw_Data_Buffer_Max.impl;

DATA PS_Raw_Data_Buffer
END PS_Raw_Data_Buffer;

DATA IMPLEMENTATION PS_Raw_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PS_Raw_Data
SUBCOMPONENTS
    Buffer : data PS_Raw_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END PS_Raw_Data_Buffer.impl;

DATA PT1000s_All_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 274; suggested aligned message buffer is...
    Source_Data_Size => 280 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PT1000s-All-Data";
    TASTE::Position_In_File => [ line => 120 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END PT1000s_All_Data;

DATA IMPLEMENTATION PT1000s_All_Data.impl
END PT1000s_All_Data.impl;

DATA PT1000s_All_Data_Buffer_Max
END PT1000s_All_Data_Buffer_Max;

DATA IMPLEMENTATION PT1000s_All_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PT1000s_All_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (280); -- Size of the buffer
    Source_Data_Size => 280 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PT1000s_All_Data_Buffer_Max.impl;

DATA PT1000s_All_Data_Buffer
END PT1000s_All_Data_Buffer;

DATA IMPLEMENTATION PT1000s_All_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PT1000s_All_Data
SUBCOMPONENTS
    Buffer : data PT1000s_All_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 296 Bytes; -- Size of the buffer in bytes
END PT1000s_All_Data_Buffer.impl;

DATA PT1000s_Celsius_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 91; suggested aligned message buffer is...
    Source_Data_Size => 96 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PT1000s-Celsius-Data";
    TASTE::Position_In_File => [ line => 118 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END PT1000s_Celsius_Data;

DATA IMPLEMENTATION PT1000s_Celsius_Data.impl
END PT1000s_Celsius_Data.impl;

DATA PT1000s_Celsius_Data_Buffer_Max
END PT1000s_Celsius_Data_Buffer_Max;

DATA IMPLEMENTATION PT1000s_Celsius_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PT1000s_Celsius_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (96); -- Size of the buffer
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PT1000s_Celsius_Data_Buffer_Max.impl;

DATA PT1000s_Celsius_Data_Buffer
END PT1000s_Celsius_Data_Buffer;

DATA IMPLEMENTATION PT1000s_Celsius_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PT1000s_Celsius_Data
SUBCOMPONENTS
    Buffer : data PT1000s_Celsius_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 112 Bytes; -- Size of the buffer in bytes
END PT1000s_Celsius_Data_Buffer.impl;

DATA PT1000s_Channels
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 56; suggested aligned message buffer is...
    Source_Data_Size => 56 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PT1000s-Channels";
    TASTE::Position_In_File => [ line => 114 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END PT1000s_Channels;

DATA IMPLEMENTATION PT1000s_Channels.impl
END PT1000s_Channels.impl;

DATA PT1000s_Channels_Buffer_Max
END PT1000s_Channels_Buffer_Max;

DATA IMPLEMENTATION PT1000s_Channels_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PT1000s_Channels
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (56); -- Size of the buffer
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PT1000s_Channels_Buffer_Max.impl;

DATA PT1000s_Channels_Buffer
END PT1000s_Channels_Buffer;

DATA IMPLEMENTATION PT1000s_Channels_Buffer.impl
    -- Buffer to hold a marshalled data of type PT1000s_Channels
SUBCOMPONENTS
    Buffer : data PT1000s_Channels_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 72 Bytes; -- Size of the buffer in bytes
END PT1000s_Channels_Buffer.impl;

DATA PT1000s_Raw_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 182; suggested aligned message buffer is...
    Source_Data_Size => 184 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "PT1000s-Raw-Data";
    TASTE::Position_In_File => [ line => 116 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END PT1000s_Raw_Data;

DATA IMPLEMENTATION PT1000s_Raw_Data.impl
END PT1000s_Raw_Data.impl;

DATA PT1000s_Raw_Data_Buffer_Max
END PT1000s_Raw_Data_Buffer_Max;

DATA IMPLEMENTATION PT1000s_Raw_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type PT1000s_Raw_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (184); -- Size of the buffer
    Source_Data_Size => 184 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END PT1000s_Raw_Data_Buffer_Max.impl;

DATA PT1000s_Raw_Data_Buffer
END PT1000s_Raw_Data_Buffer;

DATA IMPLEMENTATION PT1000s_Raw_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type PT1000s_Raw_Data
SUBCOMPONENTS
    Buffer : data PT1000s_Raw_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 200 Bytes; -- Size of the buffer in bytes
END PT1000s_Raw_Data_Buffer.impl;

DATA SPI_ID
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 16; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "SPI-ID";
    TASTE::Position_In_File => [ line => 19 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END SPI_ID;

DATA IMPLEMENTATION SPI_ID.impl
END SPI_ID.impl;

DATA SPI_ID_Buffer_Max
END SPI_ID_Buffer_Max;

DATA IMPLEMENTATION SPI_ID_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type SPI_ID
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END SPI_ID_Buffer_Max.impl;

DATA SPI_ID_Buffer
END SPI_ID_Buffer;

DATA IMPLEMENTATION SPI_ID_Buffer.impl
    -- Buffer to hold a marshalled data of type SPI_ID
SUBCOMPONENTS
    Buffer : data SPI_ID_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END SPI_ID_Buffer.impl;

DATA T_Boolean
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 1; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Boolean";
    TASTE::Position_In_File => [ line => 374 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aBOOLEAN;
END T_Boolean;

DATA IMPLEMENTATION T_Boolean.impl
END T_Boolean.impl;

DATA T_Boolean_Buffer_Max
END T_Boolean_Buffer_Max;

DATA IMPLEMENTATION T_Boolean_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Boolean
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Boolean_Buffer_Max.impl;

DATA T_Boolean_Buffer
END T_Boolean_Buffer;

DATA IMPLEMENTATION T_Boolean_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Boolean
SUBCOMPONENTS
    Buffer : data T_Boolean_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Boolean_Buffer.impl;

DATA T_Double
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Double";
    TASTE::Position_In_File => [ line => 11 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_Double;

DATA IMPLEMENTATION T_Double.impl
END T_Double.impl;

DATA T_Double_Buffer_Max
END T_Double_Buffer_Max;

DATA IMPLEMENTATION T_Double_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Double
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Double_Buffer_Max.impl;

DATA T_Double_Buffer
END T_Double_Buffer;

DATA IMPLEMENTATION T_Double_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Double
SUBCOMPONENTS
    Buffer : data T_Double_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END T_Double_Buffer.impl;

DATA T_Float
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 13; suggested aligned message buffer is...
    Source_Data_Size => 16 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Float";
    TASTE::Position_In_File => [ line => 10 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aREAL;
END T_Float;

DATA IMPLEMENTATION T_Float.impl
END T_Float.impl;

DATA T_Float_Buffer_Max
END T_Float_Buffer_Max;

DATA IMPLEMENTATION T_Float_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Float
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (16); -- Size of the buffer
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Float_Buffer_Max.impl;

DATA T_Float_Buffer
END T_Float_Buffer;

DATA IMPLEMENTATION T_Float_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Float
SUBCOMPONENTS
    Buffer : data T_Float_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 32 Bytes; -- Size of the buffer in bytes
END T_Float_Buffer.impl;

DATA T_Int16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int16";
    TASTE::Position_In_File => [ line => 7 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int16;

DATA IMPLEMENTATION T_Int16.impl
END T_Int16.impl;

DATA T_Int16_Buffer_Max
END T_Int16_Buffer_Max;

DATA IMPLEMENTATION T_Int16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int16_Buffer_Max.impl;

DATA T_Int16_Buffer
END T_Int16_Buffer;

DATA IMPLEMENTATION T_Int16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int16
SUBCOMPONENTS
    Buffer : data T_Int16_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int16_Buffer.impl;

DATA T_Int32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int32";
    TASTE::Position_In_File => [ line => 366 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int32;

DATA IMPLEMENTATION T_Int32.impl
END T_Int32.impl;

DATA T_Int32_Buffer_Max
END T_Int32_Buffer_Max;

DATA IMPLEMENTATION T_Int32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int32_Buffer_Max.impl;

DATA T_Int32_Buffer
END T_Int32_Buffer;

DATA IMPLEMENTATION T_Int32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int32
SUBCOMPONENTS
    Buffer : data T_Int32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int32_Buffer.impl;

DATA T_Int8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Int8";
    TASTE::Position_In_File => [ line => 370 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_Int8;

DATA IMPLEMENTATION T_Int8.impl
END T_Int8.impl;

DATA T_Int8_Buffer_Max
END T_Int8_Buffer_Max;

DATA IMPLEMENTATION T_Int8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Int8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Int8_Buffer_Max.impl;

DATA T_Int8_Buffer
END T_Int8_Buffer;

DATA IMPLEMENTATION T_Int8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Int8
SUBCOMPONENTS
    Buffer : data T_Int8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_Int8_Buffer.impl;

DATA T_Null_Record
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 0; suggested aligned message buffer is...
    Source_Data_Size => 0 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-Null-Record";
    TASTE::Position_In_File => [ line => 376 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END T_Null_Record;

DATA IMPLEMENTATION T_Null_Record.impl
END T_Null_Record.impl;

DATA T_Null_Record_Buffer_Max
END T_Null_Record_Buffer_Max;

DATA IMPLEMENTATION T_Null_Record_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (0); -- Size of the buffer
    Source_Data_Size => 0 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_Null_Record_Buffer_Max.impl;

DATA T_Null_Record_Buffer
END T_Null_Record_Buffer;

DATA IMPLEMENTATION T_Null_Record_Buffer.impl
    -- Buffer to hold a marshalled data of type T_Null_Record
SUBCOMPONENTS
    Buffer : data T_Null_Record_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 16 Bytes; -- Size of the buffer in bytes
END T_Null_Record_Buffer.impl;

DATA T_UInt16
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt16";
    TASTE::Position_In_File => [ line => 8 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt16;

DATA IMPLEMENTATION T_UInt16.impl
END T_UInt16.impl;

DATA T_UInt16_Buffer_Max
END T_UInt16_Buffer_Max;

DATA IMPLEMENTATION T_UInt16_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt16
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt16_Buffer_Max.impl;

DATA T_UInt16_Buffer
END T_UInt16_Buffer;

DATA IMPLEMENTATION T_UInt16_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt16
SUBCOMPONENTS
    Buffer : data T_UInt16_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt16_Buffer.impl;

DATA T_UInt32
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt32";
    TASTE::Position_In_File => [ line => 368 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt32;

DATA IMPLEMENTATION T_UInt32.impl
END T_UInt32.impl;

DATA T_UInt32_Buffer_Max
END T_UInt32_Buffer_Max;

DATA IMPLEMENTATION T_UInt32_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt32
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt32_Buffer_Max.impl;

DATA T_UInt32_Buffer
END T_UInt32_Buffer;

DATA IMPLEMENTATION T_UInt32_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt32
SUBCOMPONENTS
    Buffer : data T_UInt32_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt32_Buffer.impl;

DATA T_UInt64
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt64";
    TASTE::Position_In_File => [ line => 9 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt64;

DATA IMPLEMENTATION T_UInt64.impl
END T_UInt64.impl;

DATA T_UInt64_Buffer_Max
END T_UInt64_Buffer_Max;

DATA IMPLEMENTATION T_UInt64_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt64
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt64_Buffer_Max.impl;

DATA T_UInt64_Buffer
END T_UInt64_Buffer;

DATA IMPLEMENTATION T_UInt64_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt64
SUBCOMPONENTS
    Buffer : data T_UInt64_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt64_Buffer.impl;

DATA T_UInt8
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASTE_BasicTypes";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 8; suggested aligned message buffer is...
    Source_Data_Size => 8 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "T-UInt8";
    TASTE::Position_In_File => [ line => 372 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aINTEGER;
END T_UInt8;

DATA IMPLEMENTATION T_UInt8.impl
END T_UInt8.impl;

DATA T_UInt8_Buffer_Max
END T_UInt8_Buffer_Max;

DATA IMPLEMENTATION T_UInt8_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type T_UInt8
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (8); -- Size of the buffer
    Source_Data_Size => 8 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END T_UInt8_Buffer_Max.impl;

DATA T_UInt8_Buffer
END T_UInt8_Buffer;

DATA IMPLEMENTATION T_UInt8_Buffer.impl
    -- Buffer to hold a marshalled data of type T_UInt8
SUBCOMPONENTS
    Buffer : data T_UInt8_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
END T_UInt8_Buffer.impl;

DATA TC
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 104; suggested aligned message buffer is...
    Source_Data_Size => 104 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TC";
    TASTE::Position_In_File => [ line => 251 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aCHOICE;
END TC;

DATA IMPLEMENTATION TC.impl
END TC.impl;

DATA TC_Buffer_Max
END TC_Buffer_Max;

DATA IMPLEMENTATION TC_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TC
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (104); -- Size of the buffer
    Source_Data_Size => 104 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TC_Buffer_Max.impl;

DATA TC_Buffer
END TC_Buffer;

DATA IMPLEMENTATION TC_Buffer.impl
    -- Buffer to hold a marshalled data of type TC
SUBCOMPONENTS
    Buffer : data TC_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 120 Bytes; -- Size of the buffer in bytes
END TC_Buffer.impl;

DATA TC_Heater
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 24; suggested aligned message buffer is...
    Source_Data_Size => 24 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TC-Heater";
    TASTE::Position_In_File => [ line => 246 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TC_Heater;

DATA IMPLEMENTATION TC_Heater.impl
END TC_Heater.impl;

DATA TC_Heater_Buffer_Max
END TC_Heater_Buffer_Max;

DATA IMPLEMENTATION TC_Heater_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TC_Heater
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (24); -- Size of the buffer
    Source_Data_Size => 24 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TC_Heater_Buffer_Max.impl;

DATA TC_Heater_Buffer
END TC_Heater_Buffer;

DATA IMPLEMENTATION TC_Heater_Buffer.impl
    -- Buffer to hold a marshalled data of type TC_Heater
SUBCOMPONENTS
    Buffer : data TC_Heater_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
END TC_Heater_Buffer.impl;

DATA TC74s_All_Data
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 80; suggested aligned message buffer is...
    Source_Data_Size => 80 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TC74s-All-Data";
    TASTE::Position_In_File => [ line => 105 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TC74s_All_Data;

DATA IMPLEMENTATION TC74s_All_Data.impl
END TC74s_All_Data.impl;

DATA TC74s_All_Data_Buffer_Max
END TC74s_All_Data_Buffer_Max;

DATA IMPLEMENTATION TC74s_All_Data_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TC74s_All_Data
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (80); -- Size of the buffer
    Source_Data_Size => 80 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TC74s_All_Data_Buffer_Max.impl;

DATA TC74s_All_Data_Buffer
END TC74s_All_Data_Buffer;

DATA IMPLEMENTATION TC74s_All_Data_Buffer.impl
    -- Buffer to hold a marshalled data of type TC74s_All_Data
SUBCOMPONENTS
    Buffer : data TC74s_All_Data_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 96 Bytes; -- Size of the buffer in bytes
END TC74s_All_Data_Buffer.impl;

DATA TC74s_I2CBuses
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 40; suggested aligned message buffer is...
    Source_Data_Size => 40 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TC74s-I2CBuses";
    TASTE::Position_In_File => [ line => 103 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCEOF;
END TC74s_I2CBuses;

DATA IMPLEMENTATION TC74s_I2CBuses.impl
END TC74s_I2CBuses.impl;

DATA TC74s_I2CBuses_Buffer_Max
END TC74s_I2CBuses_Buffer_Max;

DATA IMPLEMENTATION TC74s_I2CBuses_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TC74s_I2CBuses
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (40); -- Size of the buffer
    Source_Data_Size => 40 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TC74s_I2CBuses_Buffer_Max.impl;

DATA TC74s_I2CBuses_Buffer
END TC74s_I2CBuses_Buffer;

DATA IMPLEMENTATION TC74s_I2CBuses_Buffer.impl
    -- Buffer to hold a marshalled data of type TC74s_I2CBuses
SUBCOMPONENTS
    Buffer : data TC74s_I2CBuses_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 56 Bytes; -- Size of the buffer in bytes
END TC74s_I2CBuses_Buffer.impl;

DATA TM
PROPERTIES
    -- name of the ASN.1 source file:
    Source_Text => ("dataview/dataview-uniq.asn");
    Ada_Package_Name => "TASEC_LAB_B2SPACE_DATAVIEW";
    Source_Language => (ASN1);
    -- Size of a buffer to cover all forms of message representation:
    -- Real message size is 704; suggested aligned message buffer is...
    Source_Data_Size => 704 B;
    -- name of the corresponding data type in the source file:
    Type_Source_Name => "TM";
    TASTE::Position_In_File => [ line => 222 ; column => 1 ; ];
    -- what kind of type is this?
    assert_properties::ASN1_Basic_Type =>aSEQUENCE;
END TM;

DATA IMPLEMENTATION TM.impl
END TM.impl;

DATA TM_Buffer_Max
END TM_Buffer_Max;

DATA IMPLEMENTATION TM_Buffer_Max.impl
    -- Buffer to hold a marshalled data of type TM
PROPERTIES
    Data_Model::Data_Representation => array;
    Data_Model::Dimension => (704); -- Size of the buffer
    Source_Data_Size => 704 Bytes; -- Size of the buffer in bytes
    Data_Model::Base_Type => (data ASSERT_Types::Stream_Element);
END TM_Buffer_Max.impl;

DATA TM_Buffer
END TM_Buffer;

DATA IMPLEMENTATION TM_Buffer.impl
    -- Buffer to hold a marshalled data of type TM
SUBCOMPONENTS
    Buffer : data TM_Buffer_Max.impl;
    Length : data Base_Types::uint32;
PROPERTIES
    Data_Model::Data_Representation => Struct;
    Source_Data_Size => 720 Bytes; -- Size of the buffer in bytes
END TM_Buffer.impl;

SYSTEM Taste_DataView
END    Taste_DataView;

SYSTEM IMPLEMENTATION Taste_DataView.others
SUBCOMPONENTS
   ACC_MilliG_Data : DATA ACC_MilliG_Data.impl;
   ACC_Raw_Data : DATA ACC_Raw_Data.impl;
   ATT_GUI : DATA ATT_GUI.impl;
   Content_Validity : DATA Content_Validity.impl;
   Date_Time : DATA Date_Time.impl;
   ENV_GUI : DATA ENV_GUI.impl;
   File_Name : DATA File_Name.impl;
   GPS_PVT : DATA GPS_PVT.impl;
   GYRO_MilliDPS_Data : DATA GYRO_MilliDPS_Data.impl;
   GYRO_Raw_Data : DATA GYRO_Raw_Data.impl;
   HTL_Config : DATA HTL_Config.impl;
   HTL_GUI : DATA HTL_GUI.impl;
   HTL_State : DATA HTL_State.impl;
   Heater_Data : DATA Heater_Data.impl;
   Heater_On_Off : DATA Heater_On_Off.impl;
   I2C_ID : DATA I2C_ID.impl;
   IMU_All_Data : DATA IMU_All_Data.impl;
   MGT_MilliGauss_Data : DATA MGT_MilliGauss_Data.impl;
   MGT_Raw_Data : DATA MGT_Raw_Data.impl;
   OBSW_DP_Data : DATA OBSW_DP_Data.impl;
   OBSW_DP_Filter : DATA OBSW_DP_Filter.impl;
   OBSW_DP_SingleData : DATA OBSW_DP_SingleData.impl;
   PS_All_Data : DATA PS_All_Data.impl;
   PS_Calibration_Data : DATA PS_Calibration_Data.impl;
   PS_GUI : DATA PS_GUI.impl;
   PS_Processed_Data : DATA PS_Processed_Data.impl;
   PS_Raw_Data : DATA PS_Raw_Data.impl;
   PT1000s_All_Data : DATA PT1000s_All_Data.impl;
   PT1000s_Celsius_Data : DATA PT1000s_Celsius_Data.impl;
   PT1000s_Channels : DATA PT1000s_Channels.impl;
   PT1000s_Raw_Data : DATA PT1000s_Raw_Data.impl;
   SPI_ID : DATA SPI_ID.impl;
   T_Boolean : DATA T_Boolean.impl;
   T_Double : DATA T_Double.impl;
   T_Float : DATA T_Float.impl;
   T_Int16 : DATA T_Int16.impl;
   T_Int32 : DATA T_Int32.impl;
   T_Int8 : DATA T_Int8.impl;
   T_Null_Record : DATA T_Null_Record.impl;
   T_UInt16 : DATA T_UInt16.impl;
   T_UInt32 : DATA T_UInt32.impl;
   T_UInt64 : DATA T_UInt64.impl;
   T_UInt8 : DATA T_UInt8.impl;
   TC : DATA TC.impl;
   TC_Heater : DATA TC_Heater.impl;
   TC74s_All_Data : DATA TC74s_All_Data.impl;
   TC74s_I2CBuses : DATA TC74s_I2CBuses.impl;
   TM : DATA TM.impl;
END Taste_DataView.others;
end DataView;
