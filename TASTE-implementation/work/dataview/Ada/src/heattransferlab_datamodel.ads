pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");


pragma Warnings (Off, "no entities of ""TASEC_LAB_B2SPACE_DATAVIEW"" are referenced");
pragma Warnings (Off, "use clause for package ""TASEC_LAB_B2SPACE_DATAVIEW"" has no effect");
with TASEC_LAB_B2SPACE_DATAVIEW; use TASEC_LAB_B2SPACE_DATAVIEW;
pragma Warnings (On, "no entities of ""TASEC_LAB_B2SPACE_DATAVIEW"" are referenced");
pragma Warnings (On, "use clause for package ""TASEC_LAB_B2SPACE_DATAVIEW"" has no effect");



package Heattransferlab_Datamodel with SPARK_Mode
is


subtype asn1SccHeattransferlab_States_index_range is Integer range 0..4;
type asn1SccHeattransferlab_States is (asn1Scca2, asn1Sccf2, asn1Sccf1, asn1Scca1, asn1Sccf3) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccHeattransferlab_States use
    (asn1Scca2 => 0, asn1Sccf2 => 1, asn1Sccf1 => 2, asn1Scca1 => 3, asn1Sccf3 => 4);

function asn1SccHeattransferlab_States_Equal(val1, val2 : asn1SccHeattransferlab_States) return Boolean;

function asn1SccHeattransferlab_States_Init return asn1SccHeattransferlab_States;

ERR_HEATTRANSFERLAB_STATES:constant Integer := 1; 
function asn1SccHeattransferlab_States_IsConstraintValid(val : asn1SccHeattransferlab_States) return adaasn1rtl.ASN1_RESULT;
-- asn1SccHeattransferlab_Context --------------------------------------------

type asn1SccHeattransferlab_Context is record 
    state : asn1SccHeattransferlab_States;
    init_done : adaasn1rtl.Asn1Boolean;
    press : TASEC_LAB_B2SPACE_DATAVIEW.asn1SccT_Float;
    press_10km : TASEC_LAB_B2SPACE_DATAVIEW.asn1SccT_Float;
    press_18km : TASEC_LAB_B2SPACE_DATAVIEW.asn1SccT_Float;
    mission_time : TASEC_LAB_B2SPACE_DATAVIEW.asn1SccT_Double;
end record;


function asn1SccHeattransferlab_Context_Equal(val1, val2 : asn1SccHeattransferlab_Context) return Boolean;

function asn1SccHeattransferlab_Context_Init return asn1SccHeattransferlab_Context;

ERR_HEATTRANSFERLAB_CONTEXT:constant Integer := 85; 
ERR_HEATTRANSFERLAB_CONTEXT_STATE_2:constant Integer := 15; 
ERR_HEATTRANSFERLAB_CONTEXT_INIT_DONE:constant Integer := 22; 
ERR_HEATTRANSFERLAB_CONTEXT_PRESS_2:constant Integer := 36; 
ERR_HEATTRANSFERLAB_CONTEXT_PRESS_10KM_2:constant Integer := 50; 
ERR_HEATTRANSFERLAB_CONTEXT_PRESS_18KM_2:constant Integer := 64; 
ERR_HEATTRANSFERLAB_CONTEXT_MISSION_TIME_2:constant Integer := 78; 
function asn1SccHeattransferlab_Context_IsConstraintValid(val : asn1SccHeattransferlab_Context) return adaasn1rtl.ASN1_RESULT;
subtype asn1SccTC_Heater_command_selection_index_range is Integer range 0..1;
type asn1SccTC_Heater_command_selection is (asn1Sccpower_manual_present, asn1Sccmax_min_present) with Size => adaasn1rtl.Enumerated_Size;
for asn1SccTC_Heater_command_selection use
    (asn1Sccpower_manual_present => 1, asn1Sccmax_min_present => 2);

function asn1SccTC_Heater_command_selection_Equal(val1, val2 : asn1SccTC_Heater_command_selection) return Boolean;

function asn1SccTC_Heater_command_selection_Init return asn1SccTC_Heater_command_selection;

ERR_TC_HEATER_COMMAND_SELECTION:constant Integer := 92; 
function asn1SccTC_Heater_command_selection_IsConstraintValid(val : asn1SccTC_Heater_command_selection) return adaasn1rtl.ASN1_RESULT;
pragma Warnings (Off, "there are no others");
 
pragma Warnings (On, "there are no others");
private
   --# hide Heattransferlab_Datamodel;


end Heattransferlab_Datamodel;