pragma Style_Checks (Off);
--  Code automatically generated by asn1scc tool
with adaasn1rtl;


pragma Warnings (Off, "unit ""System"" is not referenced");
with System;
pragma Warnings (On, "unit ""System"" is not referenced");

pragma Warnings (Off, "use clause for package ""adaasn1rtl"" has no effect");
use adaasn1rtl;
pragma Warnings (On, "use clause for package ""adaasn1rtl"" has no effect");

pragma Warnings (Off, "use clause for type");
pragma Warnings (Off, "is already use-visible through package use clause at line");
use type adaasn1rtl.OctetBuffer;
use type adaasn1rtl.BitArray;
use type adaasn1rtl.Asn1UInt;
use type adaasn1rtl.Asn1Int;
use type adaasn1rtl.BIT;
pragma Warnings (On, "use clause for type");
pragma Warnings (On, "is already use-visible through package use clause at line");


pragma Warnings (Off, "no entities of ""TASTE_BasicTypes"" are referenced");
pragma Warnings (Off, "use clause for package ""TASTE_BasicTypes"" has no effect");
with TASTE_BasicTypes; use TASTE_BasicTypes;
pragma Warnings (On, "no entities of ""TASTE_BasicTypes"" are referenced");
pragma Warnings (On, "use clause for package ""TASTE_BasicTypes"" has no effect");


pragma Warnings (Off, "no entities of ""TASEC_LAB_B2SPACE_DATAVIEW"" are referenced");
pragma Warnings (Off, "use clause for package ""TASEC_LAB_B2SPACE_DATAVIEW"" has no effect");
with TASEC_LAB_B2SPACE_DATAVIEW; use TASEC_LAB_B2SPACE_DATAVIEW;
pragma Warnings (On, "no entities of ""TASEC_LAB_B2SPACE_DATAVIEW"" are referenced");
pragma Warnings (On, "use clause for package ""TASEC_LAB_B2SPACE_DATAVIEW"" has no effect");



package Context_anemometer_mock with SPARK_Mode
is


-- asn1SccContext_anemometer_mock --------------------------------------------

type asn1SccContext_anemometer_mock is record 
    pin : TASTE_BasicTypes.asn1SccT_UInt32;
    freq_hz : TASEC_LAB_B2SPACE_DATAVIEW.asn1SccT_Float;
end record;


function asn1SccContext_anemometer_mock_Equal(val1, val2 : asn1SccContext_anemometer_mock) return Boolean;

function asn1SccContext_anemometer_mock_Init return asn1SccContext_anemometer_mock;

ERR_CONTEXT_ANEMOMETER_MOCK:constant Integer := 71; 
ERR_CONTEXT_ANEMOMETER_MOCK_PIN_2:constant Integer := 50; 
ERR_CONTEXT_ANEMOMETER_MOCK_FREQ_HZ_2:constant Integer := 64; 
function asn1SccContext_anemometer_mock_IsConstraintValid(val : asn1SccContext_anemometer_mock) return adaasn1rtl.ASN1_RESULT;
pragma Warnings (Off, "there are no others");
anemometer_mock_ctxt : constant Context_anemometer_mock.asn1SccContext_anemometer_mock:= asn1SccContext_anemometer_mock'(
    pin => 22,
    freq_hz => 1.50000000000000000000E+003
    ); 
pragma Warnings (On, "there are no others");
private
   --# hide Context_anemometer_mock;


end Context_anemometer_mock;