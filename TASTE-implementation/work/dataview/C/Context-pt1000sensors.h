#ifndef GENERATED_ASN1SCC_Context_pt1000sensors_H
#define GENERATED_ASN1SCC_Context_pt1000sensors_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"
#include "asn1crt_encoding.h"

#include "dataview-uniq.h"

#ifdef  __cplusplus
extern "C" {
#endif


/*-- asn1SccContext_pt1000sensors --------------------------------------------*/
typedef struct {
    asn1SccT_Int32 vcc_ch;
    asn1SccPT1000s_Channels channels;

} asn1SccContext_pt1000sensors;

flag asn1SccContext_pt1000sensors_Equal(const asn1SccContext_pt1000sensors* pVal1, const asn1SccContext_pt1000sensors* pVal2);

void asn1SccContext_pt1000sensors_Initialize(asn1SccContext_pt1000sensors* pVal);

#define ERR_CONTEXT_PT1000SENSORS		6077  /**/
#define ERR_CONTEXT_PT1000SENSORS_VCC_CH_2		6042  /**/
#define ERR_CONTEXT_PT1000SENSORS_CHANNELS_2		6070  /**/
flag asn1SccContext_pt1000sensors_IsConstraintValid(const asn1SccContext_pt1000sensors* pVal, int* pErrCode);

#define ERR_UPER_ENCODE_CONTEXT_PT1000SENSORS		6078  /**/
#define ERR_UPER_ENCODE_CONTEXT_PT1000SENSORS_VCC_CH_2		6043  /**/
#define ERR_UPER_ENCODE_CONTEXT_PT1000SENSORS_CHANNELS_2		6071  /**/
#define asn1SccContext_pt1000sensors_REQUIRED_BYTES_FOR_ENCODING       32 
#define asn1SccContext_pt1000sensors_REQUIRED_BITS_FOR_ENCODING        256

flag asn1SccContext_pt1000sensors_Encode(const asn1SccContext_pt1000sensors* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_UPER_DECODE_CONTEXT_PT1000SENSORS		6079  /**/
#define ERR_UPER_DECODE_CONTEXT_PT1000SENSORS_VCC_CH_2		6044  /**/
#define ERR_UPER_DECODE_CONTEXT_PT1000SENSORS_CHANNELS_2		6072  /**/
flag asn1SccContext_pt1000sensors_Decode(asn1SccContext_pt1000sensors* pVal, BitStream* pBitStrm, int* pErrCode);

#define ERR_ACN_ENCODE_CONTEXT_PT1000SENSORS		6080  /**/
#define ERR_ACN_ENCODE_CONTEXT_PT1000SENSORS_VCC_CH_2		6045  /**/
#define ERR_ACN_ENCODE_CONTEXT_PT1000SENSORS_CHANNELS_2		6073  /**/
#define asn1SccContext_pt1000sensors_REQUIRED_BYTES_FOR_ACN_ENCODING       32 
#define asn1SccContext_pt1000sensors_REQUIRED_BITS_FOR_ACN_ENCODING        256

flag asn1SccContext_pt1000sensors_ACN_Encode(const asn1SccContext_pt1000sensors* pVal, BitStream* pBitStrm, int* pErrCode, flag bCheckConstraints);

#define ERR_ACN_DECODE_CONTEXT_PT1000SENSORS		6081  /**/
#define ERR_ACN_DECODE_CONTEXT_PT1000SENSORS_VCC_CH_2		6046  /**/
#define ERR_ACN_DECODE_CONTEXT_PT1000SENSORS_CHANNELS_2		6074  /**/
flag asn1SccContext_pt1000sensors_ACN_Decode(asn1SccContext_pt1000sensors* pVal, BitStream* pBitStrm, int* pErrCode);

extern const asn1SccContext_pt1000sensors pt1000sensors_ctxt; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
