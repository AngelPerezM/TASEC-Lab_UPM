// Body file for function I2CDevsReader
// Generated by TASTE on 2021-05-19 18:37:13
// You can edit this file, it will not be overwritten
// Provided interfaces : Tick
// Required interfaces : InsertData, readAccelData, readGyroData, readMGTdata, readTemps, readTempsCelsius
// User-defined properties for this function:
//   |_ Taste::Active_Interfaces = any
//   |_ Taste::coordinates = 169311 170917 203361 198464
// Timers              : 

#include "i2cdevsreader.h"
#include "i2cdevsreader_state.h"
#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
i2cdevsreader_state ctxt_i2cdevsreader;


void i2cdevsreader_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
    std::cout << "[I2CDevsReader] Startup" << std::endl;
}

void i2cdevsreader_PI_ReadData(void)
{
    // IMU:
    i2cdevsreader_RI_readIMUdata( &ctxt_i2cdevsreader.obsw_dp_data.imu.data);
    // TODO: Set TimeStamp.    
    ctxt_i2cdevsreader.obsw_dp_data.exist.imu = 1;
    
    // All TC74 sensors:
    i2cdevsreader_RI_readTC74Temps( &ctxt_i2cdevsreader.obsw_dp_data.tc74s.data );
    // TODO: Set TimeStamp.    
    ctxt_i2cdevsreader.obsw_dp_data.exist.tc74s = 1;
    
    // All PT1000 sensors
    i2cdevsreader_RI_readPT1000Temps(&ctxt_i2cdevsreader.obsw_dp_data.pt1000s.data);
    // TODO: Set TimeStamp.    
    ctxt_i2cdevsreader.obsw_dp_data.exist.pt1000s = 1;
    
    i2cdevsreader_RI_InsertCompleteGroup( &ctxt_i2cdevsreader.obsw_dp_data );
}


