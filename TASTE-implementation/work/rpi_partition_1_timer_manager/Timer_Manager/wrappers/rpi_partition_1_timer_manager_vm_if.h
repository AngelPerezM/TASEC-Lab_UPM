/* Header file for function rpi_partition_1_Timer_Manager in Timer_Manager language
 * Generated by TASTE on 2021-06-28 13:00:54
 * Context Parameters present : NO
 * Provided interfaces : RESET_heattransferlab_f1_timeout, RESET_heattransferlab_f2_timeout, SET_heattransferlab_f1_timeout, SET_heattransferlab_f2_timeout, Tick
 * Required interfaces : heattransferlab_f1_timeout, heattransferlab_f2_timeout
 * User-defined properties for this function:
 * DO NOT EDIT THIS FILE, IT WILL BE OVERWRITTEN DURING THE BUILD
 */

/* The purpose of this file is to provide a wrapper around the user code,
 * with a single interface that is independent of the implementation language
 * of the function. The parameters of each PI are blackboxes encoded
 * in the form specified in the interface view (Native, uPER, or ACN)
*/

#pragma once
#if defined(__unix__) || defined (__MSP430__)
   #include <stdlib.h>
   #include <stdio.h>
#else
   typedef unsigned size_t;
#endif

#ifdef __cplusplus
extern "C" {
#endif


// Function initialization - calls user startup code of all dependent functions
void init_rpi_partition_1_timer_manager(void);


/* Provided interfaces */
void rpi_partition_1_timer_manager_RESET_heattransferlab_f1_timeout(void);
void rpi_partition_1_timer_manager_RESET_heattransferlab_f2_timeout(void);
void rpi_partition_1_timer_manager_SET_heattransferlab_f1_timeout
      (const char *IN_val, size_t IN_val_len);

void rpi_partition_1_timer_manager_SET_heattransferlab_f2_timeout
      (const char *IN_val, size_t IN_val_len);

void rpi_partition_1_timer_manager_Tick(void);


#ifdef __cplusplus
}
#endif

