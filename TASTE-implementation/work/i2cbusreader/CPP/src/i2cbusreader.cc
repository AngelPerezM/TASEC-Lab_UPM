// Body file for function I2CBusReader
// Generated by TASTE on 2021-05-31 23:54:29
// You can edit this file, it will not be overwritten
// Provided interfaces : ReadData
// Required interfaces : InsertCompleteGroup, getTime, readIMUdata, readPT1000Temps, readTC74Temps
// User-defined properties for this function:
//   |_ Taste::Active_Interfaces = any
//   |_ Taste::coordinates = 217935 165466 248655 188343
// Timers              : 

#include "i2cbusreader.h"
#include "i2cbusreader_state.h"
#include <iostream>

// Define and use function state inside this context structure
// avoid defining global/static variable elsewhere
i2cbusreader_state ctxt_i2cbusreader;


void i2cbusreader_startup(void)
{
   // Write your initialisation code, but DO NOT CALL REQUIRED INTERFACES
    std::cout << "[I2CBusReader] Startup" << std::endl;
}

void i2cbusreader_PI_ReadData(void)
{
    // IMU:
    i2cbusreader_RI_readIMUdata( &ctxt_i2cbusreader.obsw_dp_data.imu.data);
    i2cbusreader_RI_getTime( &ctxt_i2cbusreader.obsw_dp_data.imu.gps_time,
                             &ctxt_i2cbusreader.obsw_dp_data.imu.mission_time );
    
    // All TC74 sensors:
    i2cbusreader_RI_readTC74Temps( &ctxt_i2cbusreader.obsw_dp_data.tc74s.data );
    i2cbusreader_RI_getTime( &ctxt_i2cbusreader.obsw_dp_data.tc74s.gps_time,
                             &ctxt_i2cbusreader.obsw_dp_data.tc74s.mission_time );
    
    // All PT1000 sensors
    i2cbusreader_RI_readPT1000Temps(&ctxt_i2cbusreader.obsw_dp_data.pt1000s.data);
    i2cbusreader_RI_getTime( &ctxt_i2cbusreader.obsw_dp_data.pt1000s.gps_time,
                             &ctxt_i2cbusreader.obsw_dp_data.pt1000s.mission_time );
    
    i2cbusreader_RI_InsertCompleteGroup( &ctxt_i2cbusreader.obsw_dp_data );
}
